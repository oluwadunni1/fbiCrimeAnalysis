# Load necessary libraries
library(tidyverse)
library(skimr)  # For comprehensive summary statistics
library(DataExplorer)  # For automated EDA
library(maps)      # For basic mapping
library(viridis)   # For colorblind-friendly palettes

# Assuming the dataset is already loadeand cleaned
# Let's call it `fbi_data`
# If you need to load it, uncomment and modify the following line:
path_data <- here::here("data/processed") 

fbi_data <- readRDS(file.path(path_data, "agencies_processed.rds"))

# 1. Basic Overview of the Dataset
# Get dimensions and column names
cat("Dimensions of the dataset:", dim(fbi_data), "\n")
cat("Column names:", colnames(fbi_data), "\n\n")

# Check for missing values
missing_values <- colSums(is.na(fbi_data))
cat("Missing values per column:\n")
print(missing_values)

# 2. Summary Statistics
# Generate comprehensive summary statistics
skim_result <- skim(fbi_data)
print(skim_result)

# 3. Agency Distribution Analysis
# Count of unique agencies
cat("Number of unique agencies:", length(unique(fbi_data$ori)), "\n")

# Distribution of agencies by state
state_counts <- fbi_data %>%
  count(state, sort = TRUE) %>%
  mutate(percentage = n / sum(n) * 100)

print(head(state_counts, 10))

# Visualize agency distribution by state
ggplot(state_counts, aes(x = reorder(state, -n), y = n)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Number of Agencies by State",
       x = "State",
       y = "Number of Agencies") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# 4. Agency Type Analysis
# Distribution of agency types
agency_type_counts <- fbi_data %>%
  count(agency_type, sort = TRUE) %>%
  mutate(percentage = n / sum(n) * 100)

print(agency_type_counts)

# Visualize agency types
ggplot(agency_type_counts, aes(x = reorder(agency_type, -n), y = n)) +
  geom_bar(stat = "identity", fill = "darkgreen") +
  labs(title = "Distribution of Agency Types",
       x = "Agency Type",
       y = "Count") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# 5. NIBRS Participation Analysis
# Overall NIBRS participation rate
nibrs_participation <- fbi_data %>%
  summarise(participation_rate = mean(is_nibrs, na.rm = TRUE) * 100)

cat("Overall NIBRS participation rate:", nibrs_participation$participation_rate, "%\n")

# NIBRS participation by state
nibrs_by_state <- fbi_data %>%
  group_by(state) %>%
  summarise(total_agencies = n(),
            nibrs_agencies = sum(is_nibrs, na.rm = TRUE),
            participation_rate = nibrs_agencies / total_agencies * 100) %>%
  arrange(desc(participation_rate))

print(head(nibrs_by_state, 10))

# Visualize NIBRS participation rate by state
ggplot(nibrs_by_state, aes(x = reorder(state, -participation_rate), y = participation_rate)) +
  geom_bar(stat = "identity", fill = "darkblue") +
  labs(title = "NIBRS Participation Rate by State",
       x = "State",
       y = "Participation Rate (%)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# 6. NIBRS Adoption Timeline Analysis
# Convert NIBRS start date to proper date format
fbi_data <- fbi_data %>%
  mutate(nibrs_start_date = as.Date(nibrs_start_date))

# Analyze NIBRS adoption over time
nibrs_timeline <- fbi_data %>%
  filter(!is.na(nibrs_start_date)) %>%
  mutate(year = lubridate::year(nibrs_start_date)) %>%
  count(year) %>%
  arrange(year)

# Visualize NIBRS adoption timeline
ggplot(nibrs_timeline, aes(x = year, y = n)) +
  geom_line(color = "darkred", size = 1) +
  geom_point(color = "darkred", size = 2) +
  labs(title = "NIBRS Adoption Timeline",
       x = "Year",
       y = "Number of Agencies Adopting NIBRS") +
  theme_minimal()

# 7. Agency Type and NIBRS Participation Relationship
agency_nibrs <- fbi_data %>%
  group_by(agency_type) %>%
  summarise(total_agencies = n(),
            nibrs_agencies = sum(is_nibrs, na.rm = TRUE),
            participation_rate = nibrs_agencies / total_agencies * 100) %>%
  arrange(desc(participation_rate))

print(agency_nibrs)

# Visualize relationship between agency type and NIBRS participation
ggplot(agency_nibrs, aes(x = reorder(agency_type, -participation_rate), y = participation_rate)) +
  geom_bar(stat = "identity", fill = "purple") +
  labs(title = "NIBRS Participation Rate by Agency Type",
       x = "Agency Type",
       y = "Participation Rate (%)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# 8. Basic Geographic Distribution
# Create a simple map of agency locations
usa <- map_data("state")

# Basic map of agency locations
ggplot() +
  geom_polygon(data = usa, aes(x = long, y = lat, group = group), 
               fill = "white", color = "black") +
  geom_point(data = fbi_data, aes(x = longitude, y = latitude, color = agency_type), 
             alpha = 0.5, size = 0.8) +
  scale_color_viridis_d() +
  labs(title = "Geographic Distribution of Agencies",
       color = "Agency Type") +
  theme_minimal() +
  coord_fixed(1.3)

# 9. County-level Analysis
county_counts <- fbi_data %>%
  count(state, county, sort = TRUE)

top_counties <- county_counts %>%
  arrange(desc(n)) %>%
  head(20)

print(top_counties)

# 10. Create correlation matrix for numeric variables
numeric_data <- fbi_data %>%
  select(where(is.numeric)) %>%
  # Add binary NIBRS indicator
  bind_cols(is_nibrs = as.numeric(fbi_data$is_nibrs))

correlation_matrix <- cor(numeric_data, use = "complete.obs")
print(correlation_matrix)
library(corrplot)
# Visualize correlation matrix
corrplot::corrplot(correlation_matrix, method = "circle")

# Save key visualizations
ggsave("agency_by_state.png", width = 12, height = 8)
ggsave("agency_types.png", width = 10, height = 6)
ggsave("nibrs_by_state.png", width = 12, height = 8)
ggsave("nibrs_timeline.png", width = 10, height = 6)
ggsave("agency_map.png", width = 14, height = 10)